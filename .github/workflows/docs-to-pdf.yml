name: Docs to PDF

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - test
    paths-ignore:
      - "website/static/un-transparency-protocol.pdf"

jobs:
  docs-to-pdf:
    name: Generates PDF file from docs
    runs-on: ubuntu-latest
    env:
      # Instruct Puppeteer to download Chromium to a known, cacheable location.
      PUPPETEER_CACHE_DIR: ~/.cache/puppeteer
    permissions:
      contents: "write"
      actions: "read"
    concurrency:
      group: pdf
      cancel-in-progress: true
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          # This caches the npm cache (separate from our custom global installs)
          cache: npm

      # Set up a custom directory for global npm installs.
      - name: Setup custom npm global directory
        run: |
          mkdir -p ~/.npm-global
          npm config set prefix '~/.npm-global'
          echo "${HOME}/.npm-global/bin" >> $GITHUB_PATH

      # Cache the custom global npm directory.
      - name: Cache global npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm-global
          key: ${{ runner.os }}-node-global-v1
          restore-keys: |
            ${{ runner.os }}-node-global-

      # Cache Puppeteer’s Chromium download.
      - name: Cache Puppeteer Chromium
        uses: actions/cache@v3
        with:
          path: ~/.cache/puppeteer
          key: ${{ runner.os }}-puppeteer-chromium-v1
          restore-keys: |
            ${{ runner.os }}-puppeteer-chromium-

      # Install global packages – these now install into ~/.npm-global.
      - name: Install fs-extra
        run: npm install -g fs-extra

      - name: Install docs-to-pdf
        run: npm install -g docs-to-pdf

      - name: Generate PDF
        run: |
          echo "waiting for two minutes for GitHub pages to be deployed..."
          npx docs-to-pdf --initialDocURLs="https://uncefact.github.io/spec-untp/docs/about/" \
            --excludePaths="/docs/implementations/" \
            --contentSelector="article" \
            --paginationSelector="a.pagination-nav__link pagination-nav__link--next" \
            --excludeSelectors=".breadcrumbs,.theme-edit-this-page" \
            --excludeURLs="https://uncefact.github.io/spec-untp/docs/about/Meetings,https://uncefact.github.io/spec-untp/docs/about/FAQ" \
            --outputPDFFilename="website/static/un-transparency-protocol.pdf" \
            --coverTitle="UN Transparency Protocol" \
            --coverImage="https://uncefact.github.io/spec-untp/img/home-hero.jpg" \
            --puppeteerArgs="--no-sandbox,--disable-setuid-sandbox" \
            --cssStyle="body { font-size: 11.11px !important; } h1 { font-size: 33.33px !important; } h2 { font-size: 22.22px !important; }"

      - name: Commit PDF
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add website/static/un-transparency-protocol.pdf
          git commit -m "chore: update PDF file" || echo "No changes to commit"
          git push